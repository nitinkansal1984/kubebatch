Step-01: Deply application
kubectl apply -f manifest/

Step-02: Review Deploy our Application
# Deploy
kubectl apply -f kube-manifests/apps

# List Pods, Deploy & Service
kubectl get pod
kubect get svc

Step-03: Create a Horizontal Pod Autoscaler resource for the
"hpa-demo-deployment"
This command creates an autoscaler that targets 20 percent CPU utilization for the deployment, with a minimum of one pod and a maximum of ten pods.
When the average CPU load is below 20 percent, the autoscaler tries to reduce the number of pods in the deployment, to a minimum of one.
When the load is greater than 20 percent, the autoscaler tries to increase the number of pods in the deployment, up to a maximum of ten

# HPA Imperative - Replace
kubectl autoscale deployment hpa-demo-deployment --cpu-percent=20 --min=1 --max=10


# Describe HPA
kubectl describe hpa/hpa-demo-deployment 

# List HPA
kubectl get horizontalpodautoscaler.autoscaling/hpa-demo-deployment 

Step-04: Create the load & Verify how HPA is working

Grab the IP address of the pod:
kubectl.exe get pods -o wide

# Generate Load (new Terminal)
kubectl run apache-bench -i --tty --rm --image=httpd -- ab -n 500000 -c 1000 http://10.1.0.84/ 

# List all HPA
kubectl get hpa

# List specific HPA
kubectl get hpa hpa-demo-deployment 

# Describe HPA
kubectl describe hpa/hpa-demo-deployment 

# List Pods
kubectl get pods

Step-05: Cooldown / Scaledown
Default cooldown period is 5 minutes.
Once CPU utilization of pods is less than 20%, it will starting terminating pods and will reach to minimum 1 pod as configured.

Step-06: Clean-Up
# Delete HPA
kubectl delete hpa hpa-demo-deployment

# Delete Deployment & Service
kubectl delete -f kube-manifests/apps 

